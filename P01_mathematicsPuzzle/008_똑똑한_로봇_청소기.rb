'''
# 008_똑똑한_로봇_청소기.rb

같은 장소를 다시 지나다니지 않는 로봇 청소기가 있습니다.
이 로봇은 전후좌우만 이동이 가능합니다.
예를 들어 3회 이동하는 경우 맨 처음에 뒤로 이동하는 경로는 다음과 같이 9가지 패턴이 있습니다.
맨 처음 이동 방향은 전후좌우 있으므로 생각할 수 있는 이동 경로는 모두 9 * 4 = 36가지가 됩니다.

# 문제
이 로봇이 12회 이동할 때, 생각할 수 있는 이동 경로의 패턴이 몇 가지인지 구해보세요.
- 최초 3회까지는 진행 방향의 앞 방향과 좌우로 이동할 수 있다.
- 4회째 이후부터는 움직일 수 없는 방향이 생긴다.
- 맨 처음의 위치를 좌표로 표현하면 (0,0)
- 깊이 우선 탐색
'''
N = 12 # 이동횟수
def move(log)
  cnt = 0
  # 맨 처음의 위치를 포함하여 N + 1 개 조사하면 종료
  return 1 if log.size == N + 1

  # 전후좌우로 이동
  [[0,1], [0,-1], [1,0], [-1,0]].each do |d|
    next_pos = [log[-1][0] + d[0], log[-1][1] + d[1]]
    # 탐색이 끝나지 않았으면 이동시킴
    if !log.include?(next_pos) then
      cnt += move(log + [next_pos])
    end
  end
  cnt
end

puts move([[0,0]])

''' 실행 결과
324932
'''
