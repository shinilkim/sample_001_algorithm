'''
# 007_날짜의2진수변환.rb

# 문제
연월일을 YYYYMMDD의 8자리 정수로 나타내었을 때 2진수로 변환하여 거꿀로 나열한 다음
다시 10진수로 되돌렸을 때 원래 날짜와 같은 날짜가 되는 것을 찾아보세요.
기간은 지난 도쿄 올림픽(1994년10월10일)부터 다음 도쿄 올림픽(2020년7월24일 예정)까지로 하겠습니다.

예) 1966년 7월 13일인 경우
 - YYYYMMDD의 포멧 : 19660713
 - 2진수로 변환 : 1011101101111111110010011010
 - 2진수로 거꾸로 나열 : 1011101101111111110010011010
 - 거꾸로 나열한 2진수를 10진수로 되돌림 : 19660713
'''

# 방법1
# 날짜를 취급하는 Date 클래스 읽기
require 'date'

# 추출 대상의 기간 설정
term = Date.parse('19641010')..Date.parse('20200724')

# 수치화
term_list = term.map{|d|d.strftime('%Y%m%d').to_i}

# 처리한 결과가 같은 값이 되는 것을 출력
puts term_list.select{|d|d==d.to_s(2).reverse.to_i(2)}

''' 출력 결과
19660713
19660905
19770217
19950617
20020505
20130201
'''

# 방법2
# 2진수 양쪽 모두 왼쪽 끝 네 자리는 '1001'로 시작하고 자릿수도 똑같이 25자리
# 대상 기간에서 2진수의 5번째 문자부터 8번째 문자까지 추출
from_left = 19641010.to_s(2)[4,8].to_i(2)
to_left = 20200724.to_s(2)[4,8].to_i(2)

# 좌우의 8문자를 루프
from_left.upto(to_left) do |i|
  l = "%08b" % i # 왼쪽
  r = l.reverse # 오른쪽
  (0..1).each do |m|
    value = "1001#{l}#{m}#{r}1001"
    begin
      puts '            '+Date.parse(value.to_i(2).to_s).strftime('%Y%m%d')
      rescue # 유효한 날짜 외에는 무시
    end
  end
end
